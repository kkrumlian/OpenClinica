<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

	<changeSet author="ywang" id="2011-07-27-8874-1">
        <preConditions onFail="MARK_RAN"><dbms type="postgresql" /></preConditions>
        <comment>create item_data_initial_trigger()</comment> 
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION item_data_initial_trigger() RETURNS "trigger"
            AS 'DECLARE
            pk INTEGER;
            entity_name_value TEXT;
            std_evnt_id INTEGER;
            form_layout_id INTEGER;
        BEGIN
            IF (TG_OP = ''INSERT'' and length(NEW.value)>0) THEN
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value item.name FROM item WHERE item.item_id = NEW.item_id;
		        SELECT INTO std_evnt_id ec.study_event_id FROM event_crf ec WHERE ec.event_crf_id = NEW.event_crf_id;
		        SELECT INTO form_layout_id ec.form_layout_id FROM event_crf ec WHERE ec.event_crf_id = NEW.event_crf_id;
		        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, reason_for_change, new_value, event_crf_id, study_event_id, event_crf_version_id)
		                VALUES (pk, ''1'', now(), NEW.owner_id, ''item_data'', NEW.item_data_id, entity_name_value, ''initial value'', NEW.value, NEW.event_crf_id, std_evnt_id, form_layout_id);
				RETURN NULL;
            END IF;
        RETURN NULL;
        END;
        '
            LANGUAGE plpgsql
         </sql>
    </changeSet> 
    
	<changeSet author="ywang" id="2011-07-27-8874-2">
    	<preConditions onFail="MARK_RAN"><dbms type="postgresql" /></preConditions>  
    	<comment>create trigger item_data_initial</comment>    
		<sql splitStatements="false">
		 	CREATE TRIGGER item_data_initial
			    AFTER INSERT ON item_data
			    FOR EACH ROW
			    EXECUTE PROCEDURE item_data_initial_trigger()
		</sql>
    </changeSet>
    
        
	
	
	
	
</databaseChangeLog>