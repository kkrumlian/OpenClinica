<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet author="ahamid" id="2010-12-22-6573-1">
        <comment>Insert a new record in the auditlogeventtype table</comment>
        <insert tableName="audit_log_event_type">
            <column name="audit_log_event_type_id" valueNumeric="33"/>
            <column name="name" value="Study Event Restored"/>
        </insert>
    </changeSet>
    <changeSet author="ahamid" id="2010-12-22-6573-2">
         <preConditions onFail="MARK_RAN">
         <dbms type="postgresql" />
     </preConditions> 
     <sql splitStatements="false">
        CREATE OR REPLACE FUNCTION study_event_trigger() RETURNS "trigger"
            AS 'DECLARE
            pk INTEGER;
        BEGIN
            IF (TG_OP = ''INSERT'') THEN
                SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                IF(NEW.subject_event_status_id = ''1'') THEN
                    INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                    VALUES (pk, ''17'', now(), NEW.owner_id, ''study_event'', NEW.study_event_id, ''Status'',''0'', NEW.subject_event_status_id);
                END IF;
            END IF;
        
            IF (TG_OP = ''UPDATE'') THEN
                IF(OLD.subject_event_status_id <![CDATA[<>]]> NEW.subject_event_status_id) THEN
                    SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                    IF(NEW.subject_event_status_id = ''1'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''17'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''3'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''18'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''4'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''19'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''5'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''20'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''6'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''21'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''7'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''22'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    ELSIF(NEW.subject_event_status_id = ''8'') THEN
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''31'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.subject_event_status_id, NEW.subject_event_status_id);
                    END IF;
                END IF;
                IF(OLD.status_id <![CDATA[<>]]> NEW.status_id) THEN
                    IF(NEW.status_id = ''5'') THEN
                        SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''23'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.status_id, NEW.status_id);
                    ELSEIF(NEW.status_id = ''1'') THEN
                        SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                        INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                        VALUES (pk, ''33'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Status'', OLD.status_id, NEW.status_id);
                    END IF;
                END IF;
                IF(OLD.date_start <![CDATA[<>]]> NEW.date_start) THEN
                    SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                    INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                    VALUES (pk, ''24'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Start date'', OLD.date_start, NEW.date_start);
                END IF;
                IF(OLD.date_end <![CDATA[<>]]> NEW.date_end) THEN
                    SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                    INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                    VALUES (pk, ''25'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''End date'', OLD.date_end, NEW.date_end);
                END IF;
                IF(OLD.location <![CDATA[<>]]> NEW.location) THEN
                    SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
                    INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value)
                    VALUES (pk, ''26'', now(), NEW.update_id, ''study_event'', NEW.study_event_id, ''Location'', OLD.location, NEW.location);
                END IF;
                RETURN NULL;  /*return values ignored for ''after'' triggers*/
            END IF;
            RETURN NULL;
        END;'
            LANGUAGE plpgsql;
     </sql>
    </changeSet>

    

</databaseChangeLog>